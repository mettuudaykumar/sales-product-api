<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<os:object-store name="Object_store" doc:name="Object store" doc:id="05c43994-78fe-4e1f-9b2b-0d31b34d1cce" />
	<sub-flow name="sales-to-database-implFlow" doc:id="4e47632f-5683-4ea7-9525-029003cc9b15" >
		
		<flow-ref doc:name="sales-to-database-fetch-lastrun-timestamp-implSub_Flow" doc:id="444f3c24-c08e-4e39-929a-530549d3e006" name="sales-to-database-fetch-lastrun-timestamp-implSub_Flow" target="currentRunTimestamp" targetValue="#[payload[0].BATCH_END_TIMESTAMP]"/>
		<ee:transform doc:name="setBatchJobInfo" doc:id="45001a40-422d-4833-896a-5d3f192b737e" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="currentRunTimestamp" ><![CDATA[%dw 2.0
output application/json
---
(((vars.currentRunTimestamp as DateTime) ++ ('IST' as TimeZone)) default now()) // as DateTime {"format": "yyyy-MM-dd'T'HH:mm:ss.SS"}]]></ee:set-variable>
				<ee:set-variable variableName="isFullLoad" ><![CDATA[%dw 2.0
output application/java
---
if(vars.currentRunTimestamp== null) true else false]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="fe66f277-d8ef-4dd9-90c1-7173b5de3261" >
			<when expression="#[vars.isFullLoad]">
				<ee:transform doc:name="queryPrep" doc:id="dd01ef6c-8339-4207-b8d6-ceca8221621c" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="countQuery" ><![CDATA[%dw 2.0
output application/java
---
p("secure::sales.countQuery")]]></ee:set-variable>
						<ee:set-variable variableName="sfQuery" ><![CDATA[%dw 2.0
output application/java
---
p("secure::sales.pagableFullLoadQuery")]]></ee:set-variable>
						<ee:set-variable variableName="currentBatchJobInfo" ><![CDATA[%dw 2.0
var batchEndTime= vars.currentRunTimestamp
var route= "s2p"

output application/java
---
{
	trace_id: correlationId,
	route: route,
	error_message: null,
	batch_start_timestamp: vars.currentRunTimestamp  - |P100Y|, //as String {"format": "yyyy-MM-dd HH:mm:ss"}, 
	batch_end_timestamp: vars.currentRunTimestamp ,//as String {"format": "yyyy-MM-dd HH:mm:ss"},
	job_id: route ++ ((vars.currentRunTimestamp - |P100Y|)as String) ++ (batchEndTime as String)
	
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="setCurrentBatchInfo" doc:id="9690ab7f-6634-4d06-86fe-d00158758fe9">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="currentBatchJobInfo" ><![CDATA[%dw 2.0
var batchEndTime= (vars.currentRunTimestamp + (p("secure::jobInfo.batchFrequency") as Period))
var route= "s2p"
output application/java
---
{
	trace_id: correlationId,
	route: route,
	error_message: null,
	batch_start_timestamp: vars.currentRunTimestamp, //as String {"format": "yyyy-MM-dd HH:mm:ss"}, 
	batch_end_timestamp: batchEndTime ,//as String {"format": "yyyy-MM-dd HH:mm:ss"},
	job_id: route ++ (vars.currentRunTimestamp as String) ++ (batchEndTime as String)
	
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<ee:transform doc:name="queryPrep" doc:id="f0b6aedf-6f3e-4842-a897-422c8a3b1a4c" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="countQuery" ><![CDATA[%dw 2.0
output application/java
---
p("secure::sales.countQuery") ++ "  and LastModifiedDate > $(vars.currentBatchJobInfo.batch_start_timestamp) and LastModifiedDate <= $(vars.currentBatchJobInfo.batch_end_timestamp)"]]></ee:set-variable>
						<ee:set-variable variableName="sfQuery" ><![CDATA[%dw 2.0
output application/java
---
p("secure::sales.pagableDeltaLoadQuery")]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
		<flow-ref doc:name="sales-api-get-sales-account-count-implSub_Flow" doc:id="40a94a5d-07b9-4686-8f95-8d4c9f2c8ac0" name="sales-api-get-sales-account-count-implSub_Flow" target="totalRecordCount" targetValue="#[sizeOf(payload)]"/>
		<set-variable value='#[p("secure::sales.pageSize") as Number]' doc:name="SetPageSize" doc:id="2fb04b6c-f53c-45ec-b002-ef4022828352" variableName="pageSize"/>
		<flow-ref doc:name="common-utils-pagination-Sub_Flow" doc:id="8709a791-d2a9-4674-becd-6559df895c5a" name="common-utils-pagination-Sub_Flow" target="pages"/>
		<ee:transform doc:name="prepLoggingVariables" doc:id="a50484d9-7a45-458b-90d9-7c8e4d4efdfd">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="logVariable"><![CDATA[%dw 2.0
output application/json
---

{

	message: "SALES TO PRODUCT FETCHED RECORD COUNT FOR BATCH",
	"resourcePath" : "SCHEDULER:/ SALES-TO-PRODUCT",
	keyFields: {
		isFullLoad: vars.isFullLoad,
		totalRecordCount: vars.totalRecordCount,
		pageSize: vars.pageSize,
		pages: sizeOf(vars.pages)
		
	},
	info: {
		batchInf: vars.currentBatchJobInfo
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="logging-trace-step-Flow" doc:id="def576f8-7145-4ee2-a8da-e03312ff13db" name="logging-trace-step-Flow" />
		<try doc:name="Try" doc:id="efaaf69e-764a-47e9-a843-36e37d2fd601" >
			<foreach doc:name="For Each" doc:id="a1aa9da3-2764-42e3-9d65-1ebf859e3652" collection="#[vars.pages]">
			<flow-ref doc:name="sales-to-database-impl-query-pagable-Sub_Flow" doc:id="ce339e4d-3367-47a4-8e53-36162dc93a7a" name="sales-to-database-impl-query-pagable-Sub_Flow" target="sfRecords" />
			<set-variable value="#[vars.sfRecords.productAccountId__c filter ($ != null)]" doc:name="Set ProductAccountIds" doc:id="7c5ecbb5-23b2-431c-8462-59064f5a3822" variableName="ids" />
			<choice doc:name="isInsertOrUpdate" doc:id="795fd2d5-dff5-4a1e-8c76-dab0f428ff74">
				<when expression="#[not isEmpty(vars.ids)]">
					<flow-ref doc:name="sales-to-database-check-records-implSub_Flow" doc:id="b150f8db-a4b4-4d10-8fff-bf933fe07619" name="sales-to-database-check-records-implSub_Flow" target="matchedProductAccountIds" targetValue="#[payload.ACCOUNT_ID]" />
				</when>
				<otherwise>
					<set-variable value="#[[]]" doc:name="Set matchedProductAccountIds" doc:id="98894c0f-1332-4305-9c91-dc37f3929895" variableName="matchedProductAccountIds" />
				</otherwise>
			</choice>
			<ee:transform doc:name="prepareDBPayload" doc:id="0c9a63c8-bcab-40ab-a223-4fae4fc95ad6">
				<ee:message>
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="productDbRequest"><![CDATA[%dw 2.0
var updateRecords=  vars.sfRecords filter (vars.matchedProductAccountIds contains (($.productAccountId__c as Number) default null ))
var insertRecords= vars.sfRecords -- updateRecords

output application/java
---
{
	dbCreate: insertRecords map ({
					name : $.Name, 
					phone : $.Phone, 
					salesforce_id:$.Id,
					lastModifiedSystem: "I",
					is_intrested: $.isIntrested__c default false
				}),
	
	dbUpdate: updateRecords map ({
					name : $.Name, 
					phone : $.Phone, 
					salesforce_id:$.Id,
					id: $.productAccountId__c,
					IsDeleted: $.IsDeleted,
					lastModifiedSystem: "I",
					is_intrested: $.isIntrested__c default false
				})
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<choice doc:name="areRecordsTObeCreated?" doc:id="5ea6a3d0-f8e9-441a-99e2-370d9ad29eaa">
				<when expression="#[not isEmpty(vars.productDbRequest.dbCreate)]">
					<ee:transform doc:name="prepLoggingVariables" doc:id="d7b63c06-af31-4673-88e1-6b98aeaf89aa">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="logVariable"><![CDATA[%dw 2.0
output application/json
---

{

	message: "SALES TO PRODUCT RECORDS TO BE CREATED IN PRODUCT",
	"resourcePath" : "SCHEDULER:/ SALES-TO-PRODUCT",
	keyFields: {
		salesforceIds: vars.productDbRequest.dbCreate.salesforce_id
		
	},
	info: {
		batchInf: vars.currentBatchJobInfo
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="logging-trace-step-Flow" doc:id="c11c5b65-1c5a-400d-ab3b-17b7cc1c55f5" name="logging-trace-step-Flow" />
		
					<flow-ref doc:name="sales-to-database-bulk-create-implSub_Flow" doc:id="e028897e-1a92-4a3c-929f-14dde8f1dac9" name="sales-to-database-bulk-create-implSub_Flow" />
					<flow-ref doc:name="sales-to-database-query-productdb-by-salesforceids-implSub_Flow" doc:id="ec58b7d5-c425-4f46-9237-cdb38603ce10" name="sales-to-database-query-productdb-by-salesforceids-implSub_Flow" />
					<flow-ref doc:name="sales-to-database-upload-productids-to-salesforce-implSub_Flow" doc:id="071a8f65-5423-4c06-b03c-091cc9375b53" name="sales-to-database-upload-productids-to-salesforce-implSub_Flow" />
				</when>
			</choice>
			<choice doc:name="areRecordsTObeUpdated?" doc:id="9c1b5458-9b47-45d9-bd6f-783e0fd81b3e">
				<when expression="#[not isEmpty(vars.productDbRequest.dbUpdate)]">
					<ee:transform doc:name="prepLoggingVariables" doc:id="18763a1b-d814-4fa6-a720-b36794e8a673">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="logVariable"><![CDATA[%dw 2.0
output application/json
---

{

	message: "SALES TO PRODUCT RECORDS TO BE UPDATED IN PRODUCT",
	"resourcePath" : "SCHEDULER:/ SALES-TO-PRODUCT",
	keyFields: {
		salesforceIds: vars.productDbRequest.dbCreate.salesforce_id
		
	},
	info: {
		batchInf: vars.currentBatchJobInfo
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="logging-trace-step-Flow" doc:id="61b39745-17b0-4f09-9238-2dccebfa7271" name="logging-trace-step-Flow" />
		
					<flow-ref doc:name="sales-to-database-bulk-update-implSub_Flow" doc:id="1fb3cac6-5ce3-4a3e-9e5a-93780f5577a9" name="sales-to-database-bulk-update-implSub_Flow" />
				</when>
			</choice>
		</foreach>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="e662e3d5-a45a-44ba-bafa-f179cb115834" type="DB:CONNECTIVITY, DB:QUERY_EXECUTION, DB:RETRY_EXHAUSTED, SALESFORCE:CONNECTIVITY, SALESFORCE:LIMIT_EXCEEDED, SALESFORCE:MUTUAL_AUTHENTICATION_FAILED, SALESFORCE:RETRY_EXHAUSTED, SALESFORCE:TIMEOUT">
					<ee:transform doc:name="prepareErrorMessage" doc:id="a437fa9a-70dd-4fee-b95d-35947b69af19" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	errorType: error.errorType,
	message: error.detailedDescription,
	(errorPayload: payload..errors) if (not isEmpty(payload..errors))
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</on-error-propagate>
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propragate" doc:id="0cb892e5-5e71-4001-afc9-e3d28fb91efc" >
					<ee:transform doc:name="setCurrentBatchInfo" doc:id="9f57f492-7c4d-4291-9c24-744e350cebb2" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	errorType: error.errorType,
	message: error.detailedDescription,
	(errorPayload: payload..errors) if (not isEmpty(payload..errors))
}]]></ee:set-payload>
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="currentBatchJobInfo" ><![CDATA[%dw 2.0
output application/java
---
{
	trace_id: vars.currentBatchJobInfo.trace_id,
	route: vars.currentBatchJobInfo.route,
	error_message: error.detailedDescription,
	batch_start_timestamp: vars.currentBatchJobInfo.batch_start_timestamp, 
	batch_end_timestamp: vars.currentBatchJobInfo.batch_end_timestamp ,
	job_id: vars.currentBatchJobInfo.job_id,
	is_success: false
	
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<flow-ref doc:name="sales-to-database-job-info-upsert-implSub_Flow" doc:id="b1c04b95-c25e-4d07-b948-4c3d3d0df81a" name="sales-to-database-job-info-upsert-implSub_Flow"/>
				</on-error-propagate>
				
			</error-handler>
		</try>
		<set-variable value="#[vars.currentBatchJobInfo ++ {is_success : true}]" doc:name="Set currentBatchJobInfo" doc:id="da49833d-b036-434a-ab4d-199756911d6c" variableName="currentBatchJobInfo"/>
		<flow-ref doc:name="sales-to-database-job-info-upsert-implSub_Flow" doc:id="53fb31b9-6005-4a7d-a29a-0b0fc8e75680" name="sales-to-database-job-info-upsert-implSub_Flow"/>
	</sub-flow>
		<sub-flow name="sales-to-database-job-info-upsert-implSub_Flow" doc:id="97ddf2b4-74d2-44a9-b37e-ef06d8959944" >
		<ee:transform doc:name="prepareQueryData" doc:id="59f31299-9e0f-4954-891a-4d446d80ddfc" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
p("secure::jobInfo.s2p.checkIdQuery")]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
vars.currentBatchJobInfo]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="product-database-utils-select-Sub_Flow" doc:id="cdd7c58e-c5a8-4766-8b22-4664ea83cee4" name="product-database-utils-select-Sub_Flow"/>
		<choice doc:name="Choice" doc:id="98e89248-feaf-4798-bf93-d30f08f33ef3" >
			<when expression="#[isEmpty(payload)]">
				<ee:transform doc:name="prepareInsertData" doc:id="1e4fd785-26ed-47cb-b838-246b174ca424" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
p("secure::jobInfo.batchInfoCreateStatement")]]></ee:set-variable>
						<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
vars.currentBatchJobInfo]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="product-database-utils-create-Sub_Flow" doc:id="22d83979-170f-4241-89a0-d2672bde6797" name="product-database-utils-create-Sub_Flow"/>
			</when>
			<otherwise >
				<ee:transform doc:name="prepareUpdateData" doc:id="33ad1554-e1a4-463f-9705-119d7c040f60" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
p("secure::jobInfo.batchInfoUpdateStatement")]]></ee:set-variable>
						<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
[vars.currentBatchJobInfo]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="product-database-utils-update-Sub_Flow" doc:id="cac688dc-c8d5-456a-9683-77c9ae7b6a3c" name="product-database-utils-update-Sub_Flow"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sales-api-get-sales-account-count-implSub_Flow" doc:id="7813a7cb-19a9-4d2c-9d5e-ca1bd3297d7e" >
		<ee:transform doc:name="setQueryVars" doc:id="e43b069a-49a3-43c6-b466-7768000c2e4d" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
vars.countQuery]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="sales-database-utils-query-single-Sub_Flow" doc:id="c4c128f7-8c4f-4df3-875a-c45ff556d5f8" name="sales-database-utils-query-single-Sub_Flow"/>
		<ee:transform doc:name="output" doc:id="98e30467-212c-41d6-bc3b-91e0b1ba1ff9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>

			</ee:message>
			<ee:variables >
			</ee:variables>
		
</ee:transform>
	</sub-flow>
	<sub-flow name="sales-to-database-impl-query-pagable-Sub_Flow" doc:id="0fbb418b-6876-4493-a0db-f74978c05302" >
		<ee:transform doc:name="setQueryVars" doc:id="99fb4aee-bb36-4ce4-8f6b-08c1f99cd5e5" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
vars.sfQuery]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
{
	limit: payload.limit,
	offset: payload.offset,
	(batch_start_timestamp: vars.currentBatchJobInfo.batch_start_timestamp) if(not vars.isFullLoad),
	(batch_end_timestamp:  vars.currentBatchJobInfo.batch_end_timestamp) if(not vars.isFullLoad)
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="sales-database-utils-query-single-Sub_Flow" doc:id="f712ec66-89e4-491d-bf4a-9720180371f0" name="sales-database-utils-query-single-Sub_Flow"/>
		<ee:transform doc:name="output" doc:id="5c57f791-ce15-4eb7-8cca-81a92dca63a3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>

			</ee:message>
			<ee:variables >
			</ee:variables>
		
</ee:transform>
</sub-flow>
	<sub-flow name="sales-to-database-check-records-implSub_Flow" doc:id="0d4cc08d-7838-48ea-a16c-f37fe75f0b6d" >
		<ee:transform doc:name="prepareQuery" doc:id="29f57cc1-50ed-44a8-a96f-65e983f2124a" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
"select account_id from account where account_id in ($(vars.ids joinBy ','))"]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
{ids: vars.ids joinBy ","}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="product-database-utils-select-Sub_Flow" doc:id="461cd244-8ef0-41d9-851d-3686a6aae7a3" name="product-database-utils-select-Sub_Flow"/>
		<ee:transform doc:name="prepareOut" doc:id="afe35118-58f3-4151-9c52-f4c5df5f4b85" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sales-to-database-query-productdb-by-salesforceids-implSub_Flow" doc:id="8f837c99-f616-4ac6-8db0-7cd69ee381b4" >
		<ee:transform doc:name="prepareQuery" doc:id="61429317-93ca-4e3e-bf7b-3561e7aea9ca" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
var salesforceIds = (vars.productDbRequest.dbCreate.salesforce_id joinBy "','")
output application/java
---
//p("secure::product.queryBySfIds")
"SELECT * FROM ACCOUNT WHERE SALESFORCE_ID IN ('$(salesforceIds)')"]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
var salesforceIds = (vars.productDbRequest.dbCreate.salesforce_id joinBy "','")
output application/java
---
{salesforce_ids: "'$(salesforceIds)'"}
//{salesforce_ids: salesforceIds}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="product-database-utils-select-Sub_Flow" doc:id="b0007d8e-83f2-4a1f-b8da-88ece801c96b" name="product-database-utils-select-Sub_Flow"/>
		<ee:transform doc:name="prepareOut" doc:id="e7ed5f4d-c5d7-4721-8f13-465e3da9e211" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sales-to-database-bulk-create-implSub_Flow" doc:id="e8e74b2f-4489-461b-b11a-8f62d8f3aece" >
		<ee:transform doc:name="prepareQuery" doc:id="8f5bf5f0-3a27-4bf3-b857-0201d0697d69" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
p("secure::product.bulkInsertStatement")]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
vars.productDbRequest.dbCreate]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="product-database-utils-bulk-create-Sub_Flow" doc:id="dadb9f5b-9f06-4ad5-9884-83ad942cb7ed" name="product-database-utils-bulk-create-Sub_Flow"/>
		<choice doc:name="Choice" doc:id="81df3dc1-2605-4519-830b-021e5141f99e" >
			<when expression="#[(payload[0] default 0)&gt;0]">
				<ee:transform doc:name="prepareOut" doc:id="61ec9c1f-f4aa-4bf5-8e89-993fb449bcb8">
			<ee:message>
				<ee:set-payload><![CDATA[output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<raise-error doc:name="Raise DB_CUSTOM:UPDATE_FAILED" doc:id="1bafa1c2-c573-4443-8824-92851fd5f266" type="DB_CUSTOM:UPDATE_FAILED" description="NO RECORDS ARE UPDATED IN DB"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sales-to-database-bulk-update-implSub_Flow" doc:id="307c7b8f-9069-4e4f-88e8-26083eb6108e" >
	<ee:transform doc:name="prepareQuery" doc:id="9d567ab0-7a76-4af2-8ca0-1e3316379ca7" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
p("secure::product.bulkUpdateStatement")]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
vars.productDbRequest.dbUpdate]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="product-database-utils-update-Sub_Flow" doc:id="e24074cf-26ff-4677-bdf4-a82c529448d0" name="product-database-utils-update-Sub_Flow"/>
		<choice doc:name="Choice" doc:id="2d35fc4f-cc6d-4f80-989a-41c5e4165e20" >
			<when expression="#[(payload[0] default 0)&gt;0]">
				<ee:transform doc:name="prepareOut" doc:id="790e03f8-d0dc-4760-ae2a-7fa35eed3c7c">
			<ee:message>
				<ee:set-payload><![CDATA[output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<raise-error doc:name="Raise DB_CUSTOM:UPDATE_FAILED" doc:id="00983de3-cc78-4dbf-9d2c-834961a1b050" type="DB_CUSTOM:UPDATE_FAILED" description="NO RECORDS ARE UPDATED"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sales-to-database-fetch-lastrun-timestamp-implSub_Flow" doc:id="3f480ae9-1ce5-4990-acbf-54b3eb7e1cc5" >
		<ee:transform doc:name="prepareQuery" doc:id="e8e824df-221f-46ab-b2bb-1a844def93d6" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="query" ><![CDATA[%dw 2.0
output application/java
---
p("secure::jobInfo.s2p.lastRunquery")]]></ee:set-variable>
				<ee:set-variable variableName="parameters" ><![CDATA[%dw 2.0
output application/java
---
{}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="product-database-utils-select-Sub_Flow" doc:id="c9396656-03ea-4bdd-8ef8-10bac7d0664e" name="product-database-utils-select-Sub_Flow"/>
		<ee:transform doc:name="prepareOut" doc:id="dffae43e-ce64-470a-801a-aaaba13671da" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sales-to-database-upload-productids-to-salesforce-implSub_Flow" doc:id="8e1be1c5-2e1e-4cb8-bbbe-c4eaf3b6f4d1" >
		<ee:transform doc:name="setQueryVars" doc:id="259a23bf-613c-4996-9b3c-32e7cf2f3010" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ({
	Id: $.SALESFORCE_ID,
	productAccountId__c: $.ACCOUNT_ID as String,
	"lastModifiedSystem__c": "I",
})]]></ee:set-payload>

			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="sObjectType" ><![CDATA[%dw 2.0
output application/java
---
"Account"]]></ee:set-variable>
				<ee:set-variable variableName="externalId" ><![CDATA[%dw 2.0
output application/java
---
"productAccountId__c"]]></ee:set-variable>
			

</ee:variables>
		</ee:transform>
		<flow-ref doc:name="sales-database-utils-update-Sub_Flow" doc:id="a72b057d-4d5a-40b8-8d19-f54b07e14d5b" name="sales-database-utils-update-Sub_Flow"/>
		<choice doc:name="Choice" doc:id="6718a41b-3870-4793-a7ff-9e35422b724b" >
			<when expression="#[payload.items[0].successful]">
				<ee:transform doc:name="output" doc:id="bbd6b988-8b77-4877-9660-4204ad3ad5a2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<raise-error doc:name="Raise CUSTOM_SALESFORCE:RECORD_NOTUPDATED" doc:id="c0148142-10e1-405b-9a00-61e4522d5882" type="CUSTOM_SALESFORCE:RECORD_NOTUPDATED" description="ERROR WHILE UPDATING RECORDS IN SALESFORCE"/>
			</otherwise>
		
</choice>
	</sub-flow>
</mule>
